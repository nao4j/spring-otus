buildscript {
    ext {
        kotlinVersion = "1.2.60"
        springBootVersion = "2.0.4.RELEASE"
    }
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-jpa"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

group = "ru.yegorpilipenko.otus.spring"
version = "1.0-SNAPSHOT"
sourceCompatibility = 1.8

ext {
    springShellStarterVersion = "2.0.0.RELEASE"
    junitJupiterVersion = "5.2.0"
    mockitoVersion = "2.21.0"
    mockitoKotlinVersion = "1.6.0"
    assertjVersion = "3.10.0"
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("org.springframework.shell:spring-shell-starter:${springShellStarterVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.liquibase:liquibase-core")

    compileOnly("org.springframework.boot:spring-boot-configuration-processor")

    runtime("org.postgresql:postgresql")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.mockito:mockito-core:${mockitoVersion}")
    testCompile("com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}")
    testCompile("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
    testCompile("org.assertj:assertj-core:${assertjVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")

    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testRuntime("com.h2database:h2")
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

test {
    useJUnitPlatform()
}
